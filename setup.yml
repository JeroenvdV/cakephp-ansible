#!/usr/bin/env ansible-playbook
---

- hosts: localhost
  become: true

  vars_files:
    - defaults/main.yml
    - defaults/user.yml

  tasks:
    # could copy and source .env here

    - name: include main tasks
      include: tasks/main.yml

    - name: restart php-fpm on ubuntu
      service: name=php7.1-fpm state=restarted
      when: ansible_distribution|lower == "ubuntu"

    - name: check process
      shell: ps -A | grep php-fpm
      register: php_process

    - name: print process
      debug:
        msg: "{{ php_process.stdout_lines }}"

  handlers:
    - include: handlers/main.yml

# vim:ft=ansible :

# Install PostgreSQL
# From https://github.com/ansible/ansible-examples/blob/master/language_features/postgresql.yml, copied 20180320
##
# Example Ansible playbook that uses the PostgreSQL module.
#
# This installs PostgreSQL on an Ubuntu system, creates a database called
# "myapp" and a user called "django" with password "mysupersecretpassword"
# with access to the "myapp" database.
#
# TODO what does this mean:
- hosts: localhost
  become: yes
  become_user: postgres
  gather_facts: no

  vars_files:
    - defaults/main.yml
    - defaults/user.yml

  tasks:
  - name: ensure database is created
    postgresql_db: name={{db_name}}

  - name: ensure user has access to database
    postgresql_user: db={{db_name}} name={{db_user}} password={{db_pass}} priv=ALL

  - name: ensure user does not have unnecessary privilege
    postgresql_user: name={{db_user}} role_attr_flags=NOSUPERUSER,NOCREATEDB

  - name: ensure no other user can access the database
    postgresql_privs: db={{db_name}} role=PUBLIC type=database priv=ALL state=absent

